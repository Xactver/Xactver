do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==4) then v27=nil;function v27(...)return {...},v11("#",...);end v28=nil;function v28()local v38=0;local v39;local v40;local v41;local v42;local v43;local v44;while true do local v61=0;while true do if (v61==0) then if ((3 -1)~=v38) then else local v92=0 + 0;while true do if (v92==(42 -(39 + 2))) then for v101=1,v23() do v41[v101]=v23();end return v42;end if (v92==0) then for v103=266 -(103 + 162),v23() do local v104=0 -0;local v105;local v106;local v107;while true do if (v104==0) then local v117=0 -0;while true do if (v117==0) then v105=1602 -(832 + 770);v106=nil;v117=392 -(167 + 224);end if (v117~=(1 + 0)) then else v104=1;break;end end end if (v104==(749 -(107 + 641))) then v107=nil;while true do if (1~=v105) then else while true do if (v106==0) then v107=v21();if (v20(v107,2 -1,1)==0) then local v122=0 + 0;local v123;local v124;local v125;local v126;while true do if (v122~=2) then else while true do if (v123~=1) then else local v196=0;while true do if (v196==1) then v123=657 -(53 + 602);break;end if (v196~=(0 -0)) then else v126={v22(),v22(),nil,nil};if (v124==(1839 -(1032 + 807))) then local v239=0;local v240;while true do if (v239==0) then v240=635 -(30 + 605);while true do if (0==v240) then v126[845 -(232 + 610)]=v22();v126[1478 -(425 + 1049)]=v22();break;end end break;end end elseif (v124==1) then v126[3]=v23();elseif (v124==(1 + 1)) then v126[3]=v23() -((1 + 1)^(27 -11));elseif (v124~=3) then else local v262=0;local v263;local v264;local v265;while true do if (1==v262) then v265=nil;while true do if (1~=v263) then else while true do if (v264==(0 + 0)) then v265=0;while true do if (0~=v265) then else v126[368 -(94 + 271)]=v23() -((3 -1)^16);v126[5 -1]=v22();break;end end break;end end break;end if (v263==0) then local v277=0 + 0;while true do if ((0 -0)==v277) then v264=0;v265=nil;v277=1;end if (1==v277) then v263=1;break;end end end end break;end if (v262~=(0 -0)) then else v263=470 -(24 + 446);v264=nil;v262=4 -3;end end end v196=1;end end end if (v123~=3) then else if (v20(v125,3,1 + 2)~=1) then else v126[414 -(230 + 180)]=v44[v126[4]];end v39[v103]=v126;break;end if (v123~=(1 + 1)) then else local v198=599 -(44 + 555);while true do if (v198~=0) then else if (v20(v125,1,1580 -(1024 + 555))~=1) then else v126[2 + 0]=v44[v126[2 + 0]];end if (v20(v125,2,3 -1)==(1 + 0)) then v126[2 + 1]=v44[v126[7 -4]];end v198=1;end if (v198==(2 -1)) then v123=1107 -(451 + 653);break;end end end if (v123==(0 -0)) then local v199=0;while true do if (v199==(1196 -(81 + 1114))) then v123=1 -0;break;end if (v199~=(0 + 0)) then else v124=v20(v107,2,2 + 1);v125=v20(v107,4 + 0,9 -3);v199=1 + 0;end end end end break;end if ((1 + 0)==v122) then v125=nil;v126=nil;v122=2;end if (v122~=(0 -0)) then else v123=0;v124=nil;v122=1 + 0;end end end break;end end break;end if (v105==(0 -0)) then local v118=0;while true do if (v118~=1) then else v105=1 + 0;break;end if (v118~=0) then else v106=0 -0;v107=nil;v118=1;end end end end break;end end end for v108=4 -3,v23() do v40[v108-(1 -0)]=v28();end v92=1;end end end if (v38~=(2 -1)) then else local v93=1169 -(858 + 311);while true do if (v93~=2) then else v38=544 -(417 + 125);break;end if ((0 + 0)~=v93) then else v43=v23();v44={};v93=1;end if (v93==1) then for v110=1 + 0,v43 do local v111=0 -0;local v112;local v113;local v114;while true do if ((0 + 0)~=v111) then else v112=0;v113=nil;v111=1;end if (v111~=(440 -(200 + 239))) then else v114=nil;while true do if ((334 -(54 + 279))~=v112) then else if (v113==(3 -2)) then v114=v21()~=(0 -0);elseif (v113==2) then v114=v24();elseif (v113==3) then v114=v25();end v44[v110]=v114;break;end if (v112==(0 + 0)) then local v120=0;while true do if (v120~=0) then else local v121=0 + 0;while true do if (v121~=0) then else v113=v21();v114=nil;v121=1 -0;end if (v121==(1 + 0)) then v120=1;break;end end end if (v120~=(1105 -(417 + 687))) then else v112=1;break;end end end end break;end end end v42[1523 -(1023 + 497)]=v21();v93=1015 -(912 + 101);end end end v61=1;end if (v61~=1) then else if (v38==(0 -0)) then local v94=822 -(23 + 799);local v95;while true do if (v94~=(0 -0)) then else v95=0;while true do if (v95==2) then v38=1;break;end if (v95~=0) then else local v116=0;while true do if (v116==(2 -1)) then v95=3 -2;break;end if (v116~=0) then else v39={};v40={};v116=1;end end end if (v95~=(1 + 0)) then else v41={};v42={v39,v40,nil,v41};v95=2 + 0;end end break;end end end break;end end end end v17=5;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v30)if (v1(v30,2)==79) then local v64=0;while true do if (0==v64) then v19=v0(v3(v30,1,1));return "";end end else local v65=0;local v66;while true do if (v65==0) then v66=v2(v0(v30,16));if v19 then local v96=0;local v97;while true do if (v96==0) then v97=v5(v66,v19);v19=nil;v96=1;end if (v96==1) then return v97;end end else return v66;end break;end end end end);v20=nil;v17=1;end if (v17==1) then function v20(v31,v32,v33)if v33 then local v67=0;local v68;while true do if ((0 + 0)==v67) then v68=(v31/(((3637 -1865) -(1545 + 225))^(v32-(1821 -(526 + (3738 -2444))))))%((664 -(280 + 382))^(((v33-1) -(v32-(2 -1))) + (1776 -(1163 + 612))));return v68-(v68%((1 -0) -0));end end else local v69=0 -0;local v70;while true do if (v69==(971 -(855 + 116))) then v70=(7 -(36 -(6 + 25)))^(v32-(941 -(701 + (1956 -(1535 + 182)))));return (((v31%(v70 + v70))>=v70) and ((1580 -(545 + 1033)) -1)) or (0 + 0);end end end end v21=nil;function v21()local v45=0 -(996 -(929 + 67));local v46;while true do if (v45==0) then v46=v1(v15,v18,v18);v18=v18 + 1 + 0;v45=2 -1;end if ((1355 -(978 + 376))==v45) then return v46;end end end v22=nil;v17=2;end if (v17==3) then function v24()local v47=0 -0;local v48;local v49;while true do if (v47==(33 -(11 + 21))) then return (( -(5 -3) * v20(v49,(1997 -(1736 + 145)) -84)) + (2 -(1 + 0))) * ((2 + 0)^(v20(v49,1872 -(608 + 1243),26 + 5) -(796 + 227))) * ((((v20(v49,(2388 -(299 + 518)) -(1080 + 490),1650 -(1189 + 441)) * (2^(1068 -(948 + 88)))) + v48)/((6 -4)^(130 -(48 + 30)))) + 1 + 0);end if (v47==(713 -(69 + 594 + 50))) then v48=v23();v49=v23();v47=1311 -(1028 + 282);end end end v25=nil;function v25(v34)local v50;if  not v34 then v34=v23();if (v34==(1017 -(924 + 93))) then return "";end end v50=v3(v15,v18,(v18 + v34) -(3 -2));v18=v18 + v34;local v51={};for v62=1 -0, #v50 do v51[v62]=v2(v1(v3(v50,v62,v62)));end return v6(v51);end v26=v23;v17=4;end if (v17==2) then function v22()local v52,v53=v1(v15,v18,v18 + 2);v18=v18 + 1 + 1;return (v53 * (807 -551)) + v52;end v23=nil;function v23()local v54,v55,v56,v57=v1(v15,v18,v18 + (10 -7));v18=v18 + (1095 -(426 + 668)) + 3;return (v57 * (42323571 -25546355)) + (v56 * ((157600 -90806) -(164 + 268 + 826))) + (v55 * (108 + 148)) + v54;end v24=nil;v17=3;end if (5==v17) then v29=nil;function v29(v35,v36,v37)local v58=v35[1];local v59=v35[2];local v60=v35[3];return function(...)local v71=1;local v72= -1;local v73={...};local v74=v11("#",...) -1;local function v75()local v76=v58;local v77=Const;local v78=v59;local v79=v60;local v80=v27;local v81={};local v82={};local v83={};for v89=1099 -(858 + (640 -(257 + 142))),v74 do if ((v89>=v79) or (1334>((51370 -35355) -11991))) then v81[v89-v79]=v73[v89 + (1974 -((3113 -(661 + 723)) + 244))];else v83[v89]=v73[v89 + (1 -0)];end end local v84=(v74-v79) + (4 -3);local v85;local v86;while true do local v90=1583 -(1280 + 303);local v91;while true do if ((v90==(0 + 0)) or ((8204 -5382)>(5018 -(210 + 1436)))) then v91=681 -(303 + 378);while true do if ((v91==(410 -(98 + 312))) or (179>=(4066 -(34 + 82)))) then local v115=0 + 0;while true do if (((230 + (4659 -(1115 + 65)))>=419) and (v115==1)) then v91=1 + 0;break;end if ((v115==(348 -(212 + 136))) or ((2157 + 1356)<(3496 -(14 + 117 + 115)))) then v85=v76[v71];v86=v85[1645 -(492 + 1152)];v115=1;end end end if ((979<(3967 -2146)) and ((1929 -(1051 + 569 + 308))==v91)) then if ((v86<=15) or ((13069 -8311)<(3535 -(325 + 522)))) then if ((880<=1336) and (v86<=(10 -3))) then if ((v86<=((3528 -(870 + 1097)) -(1191 + 367))) or ((167 -39)==(937 -427))) then if ((509<(4272 -((630 -355) + 525))) and (v86<=(419 -(232 + 186)))) then if ((v86==((0 -0) + 0)) or (688==(4417 -(108 + 41)))) then v83[v85[5 -3]]={};else local v128=0;local v129;local v130;local v131;local v132;while true do if ((v128==(2 -0)) or (((1701 + 4127) -(1382 + 242))<=(3715 -2286))) then while true do if (((1642 -890)<=(2027 + 1354)) and (v129==((5 -2) -1))) then for v211=1 + 0 + 0,v85[4 + 0] do local v212=0 -0;local v213;local v214;local v215;while true do if (((2603 -514)<(5388 -(704 + 375))) and (v212==(1 + 0))) then v215=nil;while true do if ((1047>=((2105 -1375) -228)) and (0==v213)) then v214=0 -0;v215=nil;v213=1 -0;end if ((v213==1) or (2723<1926)) then while true do if (((5891 -1550)>=((502 + 1302) -(16 + 745))) and (v214==(913 -(644 + 269)))) then local v257=0 -(1397 -(253 + 1144));while true do if (((14535 -(13048 -(469 + 1087)))>(2 + 113)) and (v257==(2 -(1 + 0)))) then v214=2 -(1 + 0);break;end if (((4016 -(471 + 915))>(3950 -2545)) and (v257==(1368 -(1054 + 314)))) then local v276=126 -(36 + 90);while true do if (((2934 + 272)>=1514) and (v276==(1 + 0))) then v257=1 -0;break;end if (((2692 -(57 + 1217))<1901) and (v276==((1510 -946) -(69 + 495)))) then v71=v71 + 1;v215=v76[v71];v276=1 + 0;end end end end end if ((v214==1) or ((18216 -13510)<=2296)) then if (((11049 -6431)>=((2138 -(71 + 736)) + (3815 -(533 + 571)))) and (v215[1]==(1797 -((2071 -(1181 + 470)) + 1366)))) then v132[v211-(876 -(340 + 535))]={v83,v215[1 + 1 + 1]};else v132[v211-((1039 -(1009 + 29)) + 0)]={v36,v215[3]};end v82[ #v82 + (2 -1)]=v132;break;end end break;end end break;end if ((v212==0) or ((3708 -2154)==(5358 -2884))) then v213=0 + (395 -(128 + 267));v214=nil;v212=2 -(1 + 0);end end end v83[v85[1 + 1]]=v29(v130,v131,v37);break;end if (((383 -(68 + 112))<(19654 -14725)) and (v129==(1 + 0))) then local v201=0;while true do if (((1002 + (5314 -3089))<=(14856 -9877)) and (v201==(1320 -(395 + (2942 -2018))))) then v129=(545 + 1299) -((2977 -(828 + 484)) + 151 + 26);break;end if ((v201==0) or ((7894 -5609)==(253 + 144))) then v132={};v131=v9({},{__index=function(v227,v228)local v243=0 -0;local v244;local v245;while true do if (((2544 -(662 + 61))==(5080 -(4020 -(63 + 698)))) and (v243==(149 -(68 + 80)))) then while true do if ((v244==(0 + 0)) or ((5875 -(547 + 388))<(6608 -(742 + 1196)))) then v245=v132[v228];return v245[1 -0][v245[2]];end end break;end if ((2188<(1318 + 1450)) and (v243==(0 -(0 + 0)))) then v244=0 + (0 -0);v245=nil;v243=2 -1;end end end,__newindex=function(v229,v230,v231)local v246=0 -0;local v247;while true do if ((v246==(0 -0)) or ((6996 -4570)>=(6067 -3563))) then v247=v132[v230];v247[(695 + 32) -((325 -(41 + 51)) + 493)][v247[1948 -(1112 + 834)]]=v231;break;end end end});v201=792 -(625 + 166);end end end if (((12232 -9740)==(4371 -(1033 + 846))) and ((1705 -(241 + (2653 -(616 + 573))))==v129)) then v130=v78[v85[3 + 0]];v131=nil;v129=2 -1;end end break;end if ((v128==0) or ((1795 -(68 + (2519 -1617)))>((13777 -(179 + 37)) -8906))) then v129=0 -0;v130=nil;v128=1828 -(874 + 953);end if ((568<(5498 -3590)) and (1==v128)) then v131=nil;v132=nil;v128=3 -1;end end end elseif ((v86>(7 -5)) or ((3716 -(728 + 463))==(4978 -(262 + 731)))) then v83[v85[2]][v85[2 + 1]]=v83[v85[738 -((793 -(11 + 703)) + 655)]];else local v134=454 -(430 + 24);local v135;local v136;local v137;while true do if (((4291 + 346)>=2020) and (v134==(1 + 0))) then v137=nil;while true do if ((v135==1) or ((2907 -(1283 + 348))<=(2382 -(15 + 1812)))) then v83[v136 + 1]=v137;v83[v136]=v137[v85[11 -7]];break;end if ((v135==0) or ((2513 -(404 + 1222))>2547)) then local v204=(571 + 132) -(616 + 87);while true do if ((1==v204) or (((15401 -(1205 + 187)) -(39738 -28583))<=(9453 -6740))) then v135=100 -(27 + 72);break;end if (((745 -(148 + 597))==v204) or ((173 + 369)==(2215 -(9 + 70)))) then local v225=0 -0;while true do if ((v225==(0 -0)) or ((1237 + 906)==(4223 -(61 + 967)))) then v136=v85[2 + (1827 -(1571 + 256))];v137=v83[v85[1663 -((3276 -1744) + 128)]];v225=1 -0;end if ((4350>=(1026 + 468)) and ((1458 -(1376 + 32 + 49))==v225)) then v204=2 -1;break;end end end end end end break;end if (((289 + 41)==(256 + 74)) and (v134==0)) then v135=0 + (303 -(234 + 69));v136=nil;v134=1;end end end elseif ((v86<=5) or (730>(15377 -10404))) then if (((16223 -12564)==(10108 -6449)) and (v86==(11 -7))) then local v138=1103 -(660 + 443);local v139;local v140;while true do if ((4234>1854) and (v138==0)) then v139=0 -0;v140=nil;v138=(335 -(290 + 44)) + 0;end if (((7478 -5001)<3296) and (v138==(2 -1))) then while true do if (((308 + (406 -(73 + 226)))>(2124 -(1195 + 650))) and (v139==(0 + 0))) then v140=v85[1495 -(118 + 1375)];v83[v140]=v83[v140](v12(v83,v140 + (2 -(4 -3)),v72));break;end end break;end end else local v141=0 + 0;local v142;local v143;while true do if (((1294 -915)<(6868 -(143 + 1729))) and (1==v141)) then while true do if ((v142==(0 + 0)) or (3750>(5745 -(1385 + 370)))) then v143=v85[1241 -(1131 + 108)];v83[v143]=v83[v143](v83[v143 + 1 + 0]);break;end end break;end if ((((2043 -(296 + 34)) + 1617)>=(2465 -(675 + 1255))) and (v141==(0 -0))) then v142=0 + (694 -(294 + 400));v143=nil;v141=(2063 -998) -(932 + 132);end end end elseif ((v86==(1844 -(478 + 1360))) or ((758 + 1572 + 622)<=((720 -(96 + 339)) + 234))) then v71=v85[3];else local v144=0 + 0;local v145;local v146;local v147;local v148;local v149;while true do if (((9951 -5716)>(1631 -(345 + 45 + 526))) and (2==v144)) then v149=nil;while true do if (((14043 -10338)<=(1677 + 2613)) and (v145==(2 -1))) then local v207=(90 -(43 + 47)) + 0;while true do if ((v207==(0 + 0)) or (3290<=(2827 -1413))) then v72=(v148 + v146) -1;v149=0;v207=1 -0;end if ((4229==(12887 -8658)) and (((1021 -244) -(157 + 619))==v207)) then v145=459 -(247 + 210);break;end end end if ((v145==0) or ((1574 + 272)>4371)) then v146=v85[727 -(562 + 163)];v147,v148=v80(v83[v146](v83[v146 + (2 -1)]));v145=662 -((1617 -(1315 + 9)) + 368);end if ((2==v145) or (2619<(6051 -4014))) then for v216=v146,v72 do local v217=0 -0;local v218;while true do if ((v217==(1534 -(380 + 1154))) or ((2746 -(164 + 75))<(276 + 2035))) then v218=(1317 -(28 + 1289)) -0;while true do if ((v218==0) or ((7932 -5023)<=(3807 -1689))) then v149=v149 + 1 + 0 + 0;v83[v216]=v147[v149];break;end end break;end end end break;end end break;end if ((v144==0) or ((1072 + 2216)<=(3176 -(862 + 204)))) then v145=0 + 0;v146=nil;v144=1551 -(1225 + 325);end if (((1124 + 1326)<3557) and ((654 -(204 + 449))==v144)) then v147=nil;v148=nil;v144=1300 -(1260 + 38);end end end elseif ((3868>=1477) and (v86<=(32 -(2 + 19)))) then if (((4134 -(261 + (331 -(219 + 76))))>(1928 + 184)) and (v86<=(1 + 8))) then if ((v86>8) or ((2592 -(681 + 974))>=(5880 -4184))) then for v181=v85[684 -(410 + 272)],v85[128 -(12 + 113)] do v83[v181]=nil;end elseif (((448 -136)<(4492 -(39 + (1677 -(814 + 290))))) and (v83[v85[2 + (125 -(83 + 42))]]==v85[1 + 3])) then v71=v71 + (691 -(339 + 351));else v71=v85[3];end elseif (((5090 -(175 + 298))==(5972 -(158 + 1197))) and (v86==10)) then v83[v85[2 + 0]]=v85[(1727 -(117 + 1609)) + 1 + 1];else v83[v85[590 -((115 -78) + 551)]]=v83[v85[3]];end elseif ((v86<=13) or ((4539 -2867)>=(5034 -(333 + 819)))) then if ((4440>(1805 -1001)) and (v86>(46 -34))) then if ((v83[v85[1 + (1 -0)]]==v83[v85[1350 -(276 + 1070)]]) or (2498<=(509 -223))) then v71=v71 + (1791 -(414 + 1376));else v71=v85[3];end else v83[v85[3 -1]]=v85[330 -(16 + 311)]~=(0 + 0);end elseif ((v86==(1969 -((5378 -3558) + (1586 -(1162 + 289))))) or ((15627 -11170)<((818 -268) + 309))) then if ((((992 -670) + 164)<=847) and (v85[1 + 1]==v83[v85[7 -3]])) then v71=v71 + 1;else v71=v85[(92 -(78 + 11)) + 0];end else v83[v85[791 -(773 + 16)]]=v83[v85[2 + 1]][v85[7 -3]];end elseif ((v86<=(1030 -(329 + (1743 -1065)))) or (((1368 + 1972) -1564)>(4210 -(730 + 57)))) then if (((2668 -786)>(1182 + 55)) and (v86<=(44 -25))) then if ((v86<=(9 + 8)) or ((9090 -4112)<=2723)) then if ((v86>(1006 -(632 + 358))) or ((2564 -(109 + (1886 -(302 + 162))))>=((4219 -(512 + 1426)) + 2025))) then if (v83[v85[2 + 0]] or ((592 + 3352)<(2211 + 1150))) then v71=v71 + (2 -1);else v71=v85[(3551 -2425) -((1787 -937) + 273)];end else v83[v85[2]]=v37[v85[3 -(1644 -(1505 + 139))]];end elseif (((2932 + 204)>=(2997 -(27 + 446))) and (v86>18)) then v83[v85[2]][v85[1802 -(421 + 1378)]]=v85[8 -4];else v83[v85[2 -0]]=v83[v85[3]] * v83[v85[5 -1]];end elseif (((1892 + 229)<=(1119 + 1603)) and (v86<=21)) then if ((2458<((5169 -(556 + 213)) -1040)) and (v86==(48 -28))) then do return;end else v83[v85[3 -1]]();end elseif ((v86==(9 + 13)) or ((3985 -((1359 -(176 + 338)) + 492))>=(3086 + 901))) then local v157=1098 -(534 + 564);local v158;local v159;while true do if (((710 -(25 + 135 + 550))==v157) or ((2106 + 1893)<(3496 -(6 + 65)))) then v158=(537 + 133) -((1705 -(1102 + 52)) + 119);v159=nil;v157=1 + 0;end if ((v157==(962 -(370 + 591))) or ((3826 -(87 + 302))>(6076 -(1288 + 127)))) then while true do if (((4853 -((5604 -4172) + 25))>(2353 + 633)) and ((0 -0)==v158)) then v159=v85[(601 + 57) -(399 + (1787 -(1516 + 14)))];v83[v159]=v83[v159](v12(v83,v159 + ((1655 + 40) -(690 + 1004)),v85[6 -3]));break;end end break;end end else v83[v85[2 + 0]]=v29(v78[v85[1647 -(571 + 1073)]],nil,v37);end elseif (((6118 -3770)<=3697) and (v86<=27)) then if ((v86<=(25 + 0)) or ((20512 -15884)==(5206 -(778 + 286)))) then if ((v86>(5 + 19)) or (1518==(5747 -((212 -(74 + 85)) + 896)))) then local v161=0;local v162;local v163;while true do if ((v161==(1 + 0)) or (3114<=(836 + 92))) then while true do if ((1220<(1677 + 2745)) and (v162==((703 -(484 + 219)) -0))) then v163=v85[1 + 1];v83[v163]=v83[v163]();break;end end break;end if (((2885 -(431 + 31))>=1382) and (v161==(0 -0))) then v162=717 -(603 + 114);v163=nil;v161=(2 + 0) -1;end end else v83[v85[640 -(362 + 55 + 221)]][v83[v85[13 -10]]]=v83[v85[1 + 3]];end elseif ((((2441 -(1576 + 3)) + 40)<(1567 -580)) and (v86==(1 + 25))) then local v165=0;local v166;local v167;local v168;local v169;while true do if (((6235 -4252)>(96 + 106)) and (v165==(0 + 0))) then v166=v85[(2632 -758) -(1545 + 327)];v167,v168=v80(v83[v166](v12(v83,v166 + (1206 -(433 + 772)),v85[1 + 2])));v165=1;end if ((v165==(2 -1)) or ((796 + 213)>(3692 -2627))) then v72=(v168 + v166) -(1971 -(92 + 1878));v169=0 -0;v165=5 -3;end if ((((5686 -3541) -((564 -(7 + 361)) + 245))>=(2552 -1234)) and (v165==(784 -(435 + 347)))) then for v191=v166,v72 do local v192=770 -((889 -557) + 438);local v193;while true do if ((v192==0) or (((11273 -8423) -(1096 + 542))>(3787 -(469 + 866)))) then v193=(1930 -(823 + 1107)) + 0;while true do if ((v193==(1418 -(704 + 714))) or ((12040 -7169)==((8925 -3293) -4077))) then v169=v169 + 1 + 0;v83[v191]=v167[v169];break;end end break;end end end break;end end else v83[v85[2 -0]]=v36[v85[6 -3]];end elseif ((v86<=(1833 -(949 + 813 + 42))) or (((5128 -1836) -(899 + 451))>(1589 + 374))) then if ((2654<3531) and (v86==(1926 -(1718 + 180)))) then local v171=0 -0;local v172;while true do if ((v171==(0 -0)) or ((4094 + 100)<=(1468 + 2145))) then v172=v85[2];v83[v172](v83[v172 + 1 + 0]);break;end end else local v173=0 + 0;local v174;local v175;local v176;local v177;while true do if (((1869 -((2849 -(1255 + 417)) + 467))<=(17576 -13662)) and (v173==1)) then v176=nil;v177=nil;v173=2;end if (((5763 -(510 + 186 + 107))>=(2367 + 282)) and (v173==(0 -0))) then v174=0 + 0;v175=nil;v173=1 + 0;end if ((v173==(937 -(792 + 143))) or ((7285 -(676 + 1984))==3300)) then while true do if ((v174==(307 -(169 + 137))) or ((1990 + 407)<=(244 + 411))) then v177=nil;while true do if ((v175==(48 -(44 + 4))) or ((14440 -11532)<=1095)) then local v226=0;while true do if ((v226==(1 -0)) or ((31 + (2893 -(75 + 1916)))>4995)) then v175=390 -((638 -418) + 169);break;end if ((v226==(769 -(637 + 132))) or ((699 + 4017)==(20137 -15567))) then local v249=0 -0;while true do if ((4108<((1715 -(90 + 249)) + 2935)) and (v249==0)) then v176=v85[3 -1];v177={};v249=14 -(5 + 8);end if ((v249==((2208 -575) -(1145 + 487))) or ((5851 -(1152 + 665))>4813)) then v226=444 -(157 + 286);break;end end end end end if ((1896<=(4216 -(576 + 1393))) and (v175==(1 + 0))) then for v233=770 -(730 + 39), #v82 do local v234=572 -(254 + 318);local v235;local v236;while true do if ((v234==(1 + (0 -0))) or (((7512 -(63 + 952)) -(53 + 1725))<(8567 -5395))) then while true do if (((5608 -(884 + 93))>((13575 + 1785) -11405)) and ((0 -(0 + 0))==v235)) then v236=v82[v233];for v266=0 + 0, #v236 do local v267=0 + 0 + 0;local v268;local v269;local v270;local v271;while true do if ((v267==(0 -0)) or ((2566 + 409)>=(4508 -(466 + 295)))) then v268=205 -(8 + 197);v269=nil;v267=1 + 0;end if ((v267==(2 -0)) or ((641 -(351 + 208))>=(969 -624))) then while true do if ((2070==2070) and (v268==((963 -(58 + 4)) -(830 + 71)))) then local v278=440 -(145 + 295);while true do if ((v278==0) or ((7211 -4512)<=(1513 -(169 + 780)))) then v269=v236[v266];v270=v269[1];v278=1 + 0;end if ((v278==((2010 -(412 + 585)) -(414 + 598))) or (((5740 + 1152) -3089)<=(573 + 2055))) then v268=2 -1;break;end end end if ((v268==(1 + 0)) or ((2074 -(76 + 237))==(7443 -5527))) then v271=v269[17 -(13 + 2)];if (((v270==v83) and (v271>=v176)) or (2941>=(3205 + 233))) then local v279=0 -0;local v280;while true do if ((v279==(1507 -(668 + (2453 -(1225 + 389))))) or ((20167 -15597)<(2034 -1399))) then v280=0;while true do if (((1344 -(272 + 331))<=(6551 -3873)) and (v280==(1081 -(477 + 604)))) then v177[v271]=v270[v271];v269[1]=v177;break;end end break;end end end break;end end break;end if (((2 -1)==v267) or ((697 -502)>=(779 -(155 + 291)))) then v270=nil;v271=nil;v267=4 -(1 + 1);end end end break;end end break;end if (((250 -((673 -(160 + 301)) + 36 + 2))==v234) or (863>(2014 + 2077))) then local v252=0 + 0;while true do if (((1960 + 70)>1872) and (v252==(1707 -(824 + 882)))) then v234=1;break;end if ((v252==(0 + 0)) or ((5043 -((3792 -2557) + 228))<28)) then v235=1497 -(493 + 1004);v236=nil;v252=(312 + 1253) -(101 + 1463);end end end end end break;end end break;end if ((v174==(0 + 0)) or (((14070 -7433) -2405)==((11060 -(548 + 1344)) -4474))) then local v210=(889 -(250 + 639)) -0;while true do if (((151 + 6)==157) and (v210==0)) then v175=0;v176=nil;v210=(1658 -(855 + 514)) -(54 + 234);end if ((v210==(1 + 0)) or ((5209 -(1175 + 133))==(334 -188))) then v174=1 + 0 + 0;break;end end end end break;end end end elseif ((v86<=(44 -14)) or (1628>=4427)) then local v178=0;local v179;local v180;while true do if (((7023 -5020)>(1257 -((1618 -(1138 + 305)) + 920))) and (v178==1)) then while true do if ((v179==((79 + 1062) -(389 + 752))) or ((507 + 729)==(1232 -924))) then v180=v85[2];v83[v180](v12(v83,v180 + (3 -(2 + 0)),v85[1 + 2]));break;end end break;end if (((6279 -3934)<(1302 + 1747)) and (v178==(0 + 0))) then v179=0 -0;v180=nil;v178=128 -(75 + 52);end end elseif ((v86>(92 -61)) or ((9239 -5986)<(4581 -2295))) then local v183=0 + 0;local v184;local v185;local v186;local v187;local v188;local v189;while true do if ((v183==1) or ((1637 -760)>=(3439 -(154 + 130)))) then local v194=0 -0;while true do if ((v194==(0 + 0)) or ((7602 -3730)>(5660 -(671 + 559)))) then v186=nil;v187=nil;v194=1 -0;end if ((v194==((94 + 474) -(533 + 34))) or (42>(3277 -(474 + 197)))) then v183=1 + 1;break;end end end if (((3984 -((2229 -(1657 + 35)) + 718))==(3896 -(638 + 529))) and (v183==(0 -0))) then local v195=0;while true do if (((578 -319)<(102 + 1310)) and (v195==(2 -(1 -0)))) then v183=1955 -(1421 + 533);break;end if ((v195==(24 -(22 + 2))) or ((74 + 1651)==2391)) then v184=0;v185=nil;v195=1 + 0;end end end if (((2476 + 1087)>=((1682 -(1361 + 178)) + 273)) and (v183==(2 + 0))) then v188=nil;v189=nil;v183=665 -(320 + 342);end if ((v183==(1346 -(845 + 498))) or (1802>=(3950 -(418 + 84)))) then while true do if (((1286 -(155 + 1055))<(5153 -(712 + 968))) and ((1 + 0)==v184)) then local v220=766 -(696 + 70);while true do if ((v220==(1 + 0)) or ((5480 -2284)>(5572 -(85 + 1046)))) then v184=1536 -(772 + 762);break;end if ((v220==(1795 -(1341 + 454))) or ((80 + 1704)>=3096)) then local v248=0 + 0;while true do if ((v248==(0 + 0)) or ((7277 -5466)>3958)) then v187=v185 + (532 -(499 + 31));v188={v83[v185](v83[v185 + (3 -2)],v83[v187])};v248=(7 -5) -1;end if ((v248==(1 -0)) or ((4952 -(1286 + 693))<(712 + 2115))) then v220=(2978 -(613 + 448)) -(1079 + 837);break;end end end end end if ((v184==(0 + 0)) or ((3478 -2704)>=(6320 -2825))) then local v221=0;local v222;while true do if (((1849 + 1324)<=(13639 -8942)) and (v221==(0 + 0))) then v222=0 + 0;while true do if ((v222==(0 + 0)) or ((5983 -(606 + 554))<=(2833 + 555))) then local v254=0;while true do if (((3 -2)==v254) or (((3689 + 2848) -4731)<=(12 -4))) then v222=1 + 0;break;end if (((946 + 4040)>(344 -(114 + (9 -7)))) and (v254==(0 -0))) then v185=v85[2];v186=v85[375 -(151 + 220)];v254=1 + 0;end end end if (((21 + 179)==(27 + 173)) and (v222==(1 -0))) then v184=650 -(326 + 323);break;end end break;end end end if (((1242 -428)<(753 + 1064)) and (v184==(1470 -(1231 + 237)))) then local v223=0 + 0 + 0;local v224;while true do if ((v223==0) or ((4507 -(1007 + 152))>=(5421 -(348 + 1225)))) then v224=1174 -(644 + 530);while true do if ((v224==(1348 -(864 + 484))) or ((1525 -1114)>((2587 -956) + 2669))) then local v255=503 -(117 + 386);while true do if ((v255==(1955 -((1398 -1109) + 1666))) or ((4176 -(975 + 341))>(5385 -(865 + 340)))) then for v274=392 -(101 + 290),v186 do v83[v187 + v274]=v188[v274];end v189=v188[(4 -3) + 0];v255=1;end if ((v255==((214 + 183) -(384 + 12))) or (666>(3506 -(64 + 49)))) then v224=2 -(1514 -(46 + 1467));break;end end end if ((v224==(1556 -(908 + 647))) or ((5323 -(72 + 208 + 230))<(499 + 2951))) then v184=124 -(88 + 33);break;end end break;end end end if ((((4741 -(674 + 661)) -(1034 + 807))<(9088 -5824)) and (v184==(1 + 2))) then if (((289 + 2771)>(697 + 1163)) and v189) then local v237=(799 -(64 + 735)) + 0;local v238;while true do if (((1866 -(1024 + 733))>=(107 -54)) and ((0 -0)==v237)) then v238=0 + 0;while true do if ((v238==(0 -(0 -0))) or (((9346 -5290) -2756)<636)) then v83[v187]=v189;v71=v85[(2 -1) + 2];break;end end break;end end else v71=v71 + 1;end break;end end break;end end else v37[v85[6 -3]]=v83[v85[1451 -(96 + 1353)]];end v71=v71 + 1 + 0;break;end end break;end end end end A,B=v27(v10(v75));if  not A[1] then local v87=0;local v88;while true do if (v87==0) then v88=v35[4][v71] or "?";error("Script error at ["   .. v88   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end return v29(v28(),{},v16)();end end end vv8());end