do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v65=0;local v66;while true do if (v65==0) then v66=v2(v0(v29,16));if v18 then local v79=0;local v80;while true do if (v79==0) then v80=v5(v66,v18);v18=nil;v79=1;end if (1==v79) then return v80;end end else return v66;end break;end end end end);local function v19(v30,v31,v32)if v32 then local v67=0 + 0;local v68;while true do if (v67==(484 -(201 + 281 + 2))) then v68=(v30/(((402 + 338) -(147 + 591))^(v31-(1 + 0))))%((5 -3)^(((v32-(1 + 0)) -(v31-(3 -2))) + 1 + 0));return v68-(v68%1);end end else local v69=(7 -5)^(v31-(2 -1));return (((v30%(v69 + v69))>=v69) and (1 -0)) or 0;end end local function v20()local v37=0 -0;local v38;while true do if (v37==(1657 -((1768 -(96 + 772)) + (1860 -(406 + 697))))) then v38=v1(v15,v17,v17);v17=v17 + (2 -1);v37=4 -3;end if (v37==(413 -(194 + 218))) then return v38;end end end local function v21()local v39=105 -(7 + 42 + 56);local v40;local v41;while true do if ((583 -(13 + 570))==v39) then v40,v41=v1(v15,v17,v17 + (2 -(820 -(194 + 626))));v17=v17 + 1 + 1;v39=3 -2;end if (v39==(1 + 0)) then return (v41 * 256) + v40;end end end local function v22()local v42=0;local v43;local v44;local v45;local v46;while true do if (v42==(113 -(50 + 24 + 39))) then v43,v44,v45,v46=v1(v15,v17,v17 + 3);v17=v17 + ((26 + 1061) -(460 + 623));v42=(1594 -(1149 + 444)) + (0 -0);end if (v42==(1749 -(495 + 1253))) then return (v46 * (74443999 -57666783)) + (v45 * (66873 -(889 + 448))) + (v44 * (190 + 66)) + v43;end end end local function v23()local v47=v22();local v48=v22();return (( -2 * v19(v48,4 + 28)) + (94 -(71 + 22))) * ((1 + 1)^(v19(v48,1093 -(903 + (2065 -(589 + 1307))),1639 -(529 + 1079)) -((4680 -3297) -((411 -195) + 144)))) * ((((v19(v48,1 + 0,1143 -(996 + 127)) * ((508 -(487 + 13 + 6))^(91 -59))) + v47)/((1 + 1)^(149 -97))) + ((4 -2) -1));end local function v24(v33)local v49;if  not v33 then v33=v22();if (v33==0) then return "";end end v49=v3(v15,v17,(v17 + v33) -(563 -(494 + 68)));v17=v17 + v33;local v50={};for v63=1465 -(1205 + 259), #v49 do v50[v63]=v2(v1(v3(v49,v63,v63)));end return v6(v50);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v51~=(2 + 0)) then else v56=nil;v57=nil;v51=3;end if (v51~=(4 + 0)) then else while true do if (v52==(7 -5)) then local v76=0 + 0;while true do if (v76==(1 + 0)) then v52=3;break;end if (v76==0) then v57=nil;v58=nil;v76=1;end end end if (v52==(1 -0)) then local v77=0;while true do if (1~=v77) then else v52=2;break;end if (0~=v77) then else v55=nil;v56=nil;v77=1;end end end if (v52~=(4 -1)) then else v59=nil;while true do if (v53~=1) then else local v95=0 + 0;while true do if (v95~=(5 -3)) then else v53=2;break;end if (v95==1) then for v102=1,v58 do local v103=0 + 0;local v104;local v105;local v106;local v107;while true do if (v103~=(5 -3)) then else while true do if (v104~=(154 -(108 + 45))) then else v107=nil;while true do if (v105~=0) then else local v168=414 -(286 + 128);local v169;while true do if (v168~=(1272 -(798 + 474))) then else v169=0;while true do if (v169~=(0 -0)) then else local v213=0;while true do if (v213~=(2 -1)) then else v169=1;break;end if (v213~=0) then else v106=v20();v107=nil;v213=1 -0;end end end if (v169~=(1768 -(1280 + 487))) then else v105=1;break;end end break;end end end if (v105==1) then if (v106==(1937 -(1173 + 763))) then v107=v20()~=(1984 -(754 + 1230));elseif (v106==(4 -2)) then v107=v23();elseif (v106==3) then v107=v24();end v59[v102]=v107;break;end end break;end if (v104~=(0 + 0)) then else local v109=0;while true do if (v109==(1067 -(312 + 754))) then v104=1766 -(1280 + 485);break;end if (v109~=0) then else v105=1557 -(709 + 848);v106=nil;v109=1 + 0;end end end end break;end if (0~=v103) then else v104=0;v105=nil;v103=2000 -(483 + 1516);end if ((1972 -(233 + 1738))==v103) then v106=nil;v107=nil;v103=135 -(101 + 32);end end end v57[6 -3]=v20();v95=2;end if (v95==0) then v58=v22();v59={};v95=1;end end end if (v53==2) then local v96=0;local v97;while true do if (v96==0) then v97=0;while true do local v108=0;while true do if (v108==0) then if (1~=v97) then else for v110=1,v22() do v56[v110]=v22();end return v57;end if (v97~=0) then else for v112=1,v22() do local v113=0 -0;local v114;local v115;while true do if (v113~=(0 -0)) then else v114=0;v115=nil;v113=1;end if ((1 + 0)==v113) then while true do if (v114~=(525 -(131 + 394))) then else v115=v20();if (v19(v115,843 -(52 + 790),1 + 0)==0) then local v196=0;local v197;local v198;local v199;local v200;while true do if (v196==1) then v199=nil;v200=nil;v196=2;end if (v196~=0) then else v197=0;v198=nil;v196=371 -(157 + 213);end if (v196~=2) then else while true do if (3==v197) then if (v19(v199,3 + 0,277 -(216 + 58))~=1) then else v200[1 + 3]=v59[v200[4]];end v54[v112]=v200;break;end if ((0 + 0)==v197) then local v250=0;while true do if (1==v250) then v197=1;break;end if (v250~=(0 + 0)) then else local v264=0;while true do if (1==v264) then v250=1;break;end if (0==v264) then v198=v19(v115,3 -1,3);v199=v19(v115,7 -3,1887 -(753 + 1128));v264=1;end end end end end if (v197==(2 -0)) then local v251=0 + 0;while true do if ((4 -3)==v251) then v197=3 + 0;break;end if (v251==0) then if (v19(v199,1 + 0,1)==1) then v200[2]=v59[v200[1823 -(581 + 1240)]];end if (v19(v199,2,1450 -(115 + 1333))==(1 -0)) then v200[3]=v59[v200[9 -6]];end v251=1;end end end if (v197~=(1 + 0)) then else local v252=0;while true do if (1==v252) then v197=5 -3;break;end if (v252==(0 -0)) then v200={v21(),v21(),nil,nil};if (v198==0) then local v269=0;local v270;while true do if (v269==(574 -(226 + 348))) then v270=0;while true do if (v270~=0) then else v200[1962 -(1072 + 887)]=v21();v200[1483 -(1458 + 21)]=v21();break;end end break;end end elseif (v198==(1 + 0)) then v200[3]=v22();elseif (v198==2) then v200[3]=v22() -((3 -1)^16);elseif (v198==(5 -2)) then local v282=0 + 0;local v283;local v284;while true do if (v282==(1 + 0)) then while true do if ((0 -0)~=v283) then else v284=0;while true do if (v284~=0) then else v200[3]=v22() -((2 + 0)^16);v200[7 -3]=v21();break;end end break;end end break;end if (v282~=(0 -0)) then else v283=0;v284=nil;v282=1;end end end v252=2 -1;end end end end break;end end end break;end end break;end end end for v116=3 -2,v22() do v55[v116-1]=v27();end v97=1 + 0;end break;end end end break;end end end if (0~=v53) then else local v98=632 -(194 + 438);while true do if (v98~=(2 + 0)) then else v53=1;break;end if (v98~=(0 + 0)) then else v54={};v55={};v98=1;end if (v98~=(1 + 0)) then else v56={};v57={v54,v55,nil,v56};v98=1 + 1;end end end end break;end if ((1420 -(966 + 454))==v52) then local v78=0;while true do if (v78==0) then v53=1846 -(247 + 1599);v54=nil;v78=1 + 0;end if (v78~=1) then else v52=1;break;end end end end break;end if (v51~=(1 + 0)) then else v54=nil;v55=nil;v51=1 + 1;end if (v51==(137 -(27 + 107))) then v58=nil;v59=nil;v51=5 -1;end if (v51==(183 -(125 + 58))) then v52=0 + 0;v53=nil;v51=2 -1;end end end local function v28(v34,v35,v36)local v60=v34[1];local v61=v34[2];local v62=v34[3];return function(...)local v70=0;local v71;local v72;local v73;local v74;local v75;while true do if (v70==0) then v71=1;v72= -1;v70=1;end if (v70==1) then v73={...};v74=v11("#",...) -1;v70=2;end if (v70==3) then A,B=v26(v10(v75));if  not A[1] then local v81=v34[4][v71] or "?";error("Script error at ["   .. v81   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (v70==2) then v75=nil;function v75()local v82=v60;local v83=Const;local v84=v61;local v85=v62;local v86=v26;local v87={};local v88={};local v89={};for v93=0 + 0,v74 do if ((v93>=v85) or ((3313 + 1217)<(2923 -1183))) then v87[v93-v85]=v73[v93 + 1 + 0 + 0];else v89[v93]=v73[v93 + (103 -(10 + 92))];end end local v90=(v74-v85) + 1;local v91;local v92;while true do local v94=0 + 0;while true do if (((1098 + 2053)>=(17 + 1311)) and (v94==(0 -0))) then v91=v82[v71];v92=v91[1];v94=2 -1;end if ((3633<=(4049 -(64 + 121))) and (v94==(1017 -(669 + 347)))) then if ((v92<=(16 + 0)) or ((717 -(151 + (1552 -(1118 + 359))))>=((2092 -(161 + 557)) + 91))) then if ((v92<=(2 + 4 + 1)) or ((3556 -2084)<(1972 -1195))) then if ((1641==1641) and (v92<=(1926 -(1813 + 110)))) then if ((v92<=((2898 -2233) -(466 + 198))) or ((2839 -(118 + 133 + 239))>(4073 -(494 + (3183 -2091))))) then if ((v92>((4786 -3121) -(729 + 936))) or ((870 + 877)==(2349 -((1501 -618) + 340)))) then if (((813 + 42)<(2007 + 2666)) and (v91[4 -2]==v89[v91[4 -0]])) then v71=v71 + (1980 -(1317 + 662));else v71=v91[3 + 0 + 0];end else v89[v91[2]]=v91[542 -(191 + 348)];end elseif (((4723 -3077)<=(4265 -((164 -86) + 34))) and (v92>(1411 -(764 + 645)))) then v89[v91[2]][v91[273 -(29 + 241)]]=v91[12 -8];else v89[v91[2 + 0]]=v89[v91[1 + 2]][v91[4]];end elseif ((4531<=4757) and (v92<=5)) then if ((v92>((2 + 8) -6)) or ((1716 + 55)<=(300 + 165))) then local v121=745 -(597 + 148);local v122;local v123;while true do if ((v121==(0 + 0)) or ((414 + 526)==(13606 -10132))) then v122=0 -0;v123=nil;v121=2 -1;end if (((1 + 0)==v121) or ((4576 -(321 + 829))<=(17 + 24))) then while true do if ((v122==0) or ((1530 -734)>(1453 + 2409))) then v123=v89[v91[6 -2]];if ( not v123 or ((3764 -(906 + 5 + 31))>=(3808 -(236 + 168)))) then InstrPoint=InstrPoint + 1 + 0;else local v231=14 -(11 + 3);local v232;while true do if ((((1079 + 2073) -(1001 + 540))<=1695) and (v231==(1264 -(920 + 344)))) then v232=0;while true do if ((v232==(1630 -(1255 + 375))) or ((664 + 931)>(2479 + 662))) then v89[v91[4 -2]]=v123;InstrPoint=v91[5 -2];break;end end break;end end end break;end end break;end end else v89[v91[1742 -(443 + 1297)]]=v89[v91[2 + 1]];end elseif ((v92>((3773 -2121) -(368 + 1278))) or ((1319 + 471 + 19)<=389)) then local v125=(417 -119) -(244 + 41 + 13);local v126;local v127;local v128;while true do if (((1634 -(363 + 199))<=(576 + 2419)) and (v125==(1547 -(1287 + 259)))) then v128=650 -(367 + 283);for v191=v126,v91[1772 -(800 + 968)] do local v192=0 + 0;local v193;local v194;while true do if ((v192==0) or ((1257 -(888 + 114))>(4246 -((523 -274) + 75)))) then v193=1902 -(1011 + 891);v194=nil;v192=595 -(516 + 78);end if (((430 + 1695)==2125) and (v192==1)) then while true do if ((v193==(0 -0)) or (591>=(1464 + 327))) then v194=0 + 0;while true do if (((268 + 632)==(788 + 112)) and (v194==(0 + 0))) then v128=v128 + 1 + 0;v89[v191]=v127[v128];break;end end break;end end break;end end end break;end if ((v125==(247 -(214 + 28 + 5))) or ((779 + 743)>=((6311 -(195 + 18)) -2754))) then v126=v91[2];v127={v89[v126](v89[v126 + (752 -(601 + 150))])};v125=1 + 0;end end else local v129=(0 -0) -0;local v130;local v131;local v132;local v133;local v134;while true do if (((473 + (1272 -(447 + 219)))<4220) and (0==v129)) then v130=0 + 0;v131=nil;v129=(631 -(81 + 68)) -(210 + 271);end if ((1301>5) and (v129==(248 -(78 + 169)))) then v132=nil;v133=nil;v129=5 -3;end if (((6728 -2478)>=3208) and (v129==(1 + 1))) then v134=nil;while true do if (((1602 + 1493)>(1336 -828)) and ((1 + 1)==v130)) then for v214=v131,v72 do local v215=0 -0;local v216;while true do if (((9962 -5567)>=(4099 -(574 + 1095))) and ((0 -0)==v215)) then v216=0 + 0 + 0;while true do if (((905 -((776 -464) + 593))==v216) or ((1863 -(1063 + 750))>((3926 -2039) -(409 + 1184)))) then v134=v134 + 1 + 0;v89[v214]=v132[v134];break;end end break;end end end break;end if ((v130==(1 -0)) or ((2831 -(62 + 831))<=(3570 -(909 + 937)))) then local v201=(1064 -(46 + 2)) -((1052 -(85 + 168)) + 217);while true do if (((1 + 0)==v201) or ((504 -(93 + 126))>(8809 -5629))) then v130=(972 -(511 + 454)) -5;break;end if ((v201==(0 + 0)) or ((1071 + 3285)<(1600 + 2174))) then v72=(v133 + v131) -1;v134=0 + 0;v201=4 -3;end end end if (((40 + 4835)>=3443) and (v130==(0 -0))) then local v202=0 + 0;while true do if (((668 -(417 + 251))==v202) or ((3802 -1498)<=1057)) then v131=v91[2 -0];v132,v133=v86(v89[v131](v89[v131 + 1]));v202=1 + 0;end if ((3701>3473) and ((936 -(68 + 867))==v202)) then v130=1;break;end end end end break;end end end elseif ((v92<=(21 -10)) or ((1659 + 24)>=4588)) then if ((v92<=(18 -9)) or ((5649 -2337)<=(1998 + (291 -201)))) then if ((v92==(4 + (16 -12))) or ((1955 + 1080)>=(14224 -9597))) then v89[v91[6 -4]]=v89[v91[3]] * v89[v91[8 -(1 + 3)]];else v36[v91[5 -2]]=v89[v91[1 + 1]];end elseif ((v92==(9 + 1)) or ((5127 -(1539 + 408))>=(10819 -7229))) then if ((4888>=4303) and (v89[v91[164 -(37 + 125)]]==v91[4])) then v71=v71 + 1 + 0;else v71=v91[780 -(22 + 755)];end else v89[v91[543 -(295 + 246)]]=v91[1 + 2]~=(300 -(65 + 235));end elseif ((239<(8641 -3758)) and (v92<=(787 -(201 + (895 -(117 + 205)))))) then if (((1841 -1104)==(1954 -(189 + (2694 -1666)))) and (v92>((41 -(20 + 12)) + 3))) then local v138=(313 + 22) -(267 + 68);local v139;local v140;while true do if ((v138==(605 -(548 + 56))) or (2957<=(1350 -621))) then while true do if (((263 + 3850)==(5478 -(467 + 898))) and ((1170 -((836 -391) + 420 + 305))==v139)) then v140=v91[3 -1];v89[v140]=v89[v140](v89[v140 + 1 + 0]);break;end end break;end if (((1207 + 394)==(3012 -(295 + 1116))) and (v138==0)) then v139=53 -(43 + 10);v140=nil;v138=(3 + 822) -(707 + 117);end end else v89[v91[1583 -(1523 + 58)]]=v36[v91[12 -9]];end elseif (((3114 -(24 + 136))==(4242 -(70 + 1218))) and (v92<=14)) then local v142=714 -(285 + 429);local v143;while true do if ((1922>=(3839 -(3921 -(473 + 1522)))) and (v142==(937 -(405 + 532)))) then v143=v91[1675 -(518 + 1155)];v89[v143](v12(v89,v143 + ((3 + 0) -2),v91[3]));break;end end elseif ((v92==15) or ((6667 -4771)>=3325)) then local v173=0 -0;local v174;while true do if (((1520 + 2214)<(5835 -((2565 -(104 + 958)) + 409))) and (v173==((0 + 0) -0))) then v174=v91[2];v89[v174](v89[v174 + 1]);break;end end else local v175=0 -0;local v176;local v177;local v178;while true do if (((143 -39)<=(1326 + 2563)) and (v175==0)) then v176=1027 -(375 + 652);v177=nil;v175=343 -(104 + 238);end if ((v175==(1751 -((1996 -(1483 + 360)) + 1597))) or ((931 + 3802)<=(2252 -(234 + 103)))) then v178=nil;while true do if ((v176==(365 -(256 + 108))) or ((4875 -(548 + 745))<(480 + 426))) then v89[v177 + (421 -(9 + (733 -322)))]=v178;v89[v177]=v178[v91[(3 + 2) -1]];break;end if (((2648 -1873)<=4070) and (v176==(0 -0))) then local v235=0 + 0;while true do if ((84<=(6508 -(796 + 1042))) and (v235==(517 -(504 + 12)))) then v176=1;break;end if (((1642 -(206 + 1436))==v235) or ((6549 -3961)<(107 + 1351 + 13))) then v177=v91[1413 -(1359 + 52)];v178=v89[v91[3]];v235=3 -2;end end end end break;end end end elseif (((3396 -1091)==(3472 -(193 + 974))) and (v92<=(37 -12))) then if (((377 + 232 + 2179)>(21 + 2291)) and (v92<=(2 + (49 -31)))) then if (((2075 + 1657)==3732) and (v92<=(1959 -(1476 + 465)))) then if ((v92>(49 -32)) or (((2416 -(35 + 90)) -(1056 + 180))>(6603 -(1466 + 260)))) then v89[v91[2 + 0]]={};else local v145=0;local v146;local v147;local v148;local v149;local v150;local v151;while true do if ((3350<(4664 + 294)) and (v145==(9 -7))) then v150=nil;v151=nil;v145=3;end if (((14 -11)==v145) or ((5914 -((2729 -1893) + 466))<((2282 + 1705) -(732 + 182)))) then while true do if ((v146==(261 -(74 + 187))) or ((3179 -(395 + 84))<1044)) then local v204=(684 + 40) -(22 + 702);while true do if (((1528 + 341)>=(423 -((1253 -(696 + 475)) + 217))) and (v204==(0 -(0 -0)))) then v147=v91[1 + 1];v148=v91[9 -5];v204=1 + 0;end if (((4023 -2771)==1252) and (v204==1)) then v146=3 -2;break;end end end if ((v146==(1402 -(249 + 341 + 811))) or (((2970 + 2331) -(250 + 149))<=3754)) then v149=v147 + (3 -1);v150={v89[v147](v89[v147 + ((2 + 0) -1)],v89[v149])};v146=6 -4;end if ((((12679 -7079) -(1358 + 322))==(5918 -(1434 + 564))) and (v146==(1 + 0 + 1))) then local v205=0 + 0;while true do if (((5884 -3205)>1440) and (v205==1)) then v146=(3081 -(446 + 1525)) -(123 + 984);break;end if ((v205==(0 -0)) or (105==(1429 + 765))) then for v246=1 -0,v148 do v89[v149 + v246]=v150[v246];end v151=v150[298 -(206 + 91)];v205=373 -(95 + 41 + 236);end end end if (((3653 -((4601 -3140) + (2310 -1772)))<((16830 -(198 + 112)) -12083)) and (v146==(20 -(11 + (17 -11))))) then if (v151 or ((205 -112)>=(6299 -3275))) then local v236=0 + 0;local v237;local v238;while true do if ((v236==(1 + 0)) or ((6026 -(16894 -12232))>=(4757 -((534 -293) + 1320)))) then while true do if (((268 + 156)<=(352 + 1640)) and (v237==0)) then v238=1117 -(27 + 1090);while true do if (((2143 + 1471)>=(672 + 65)) and (0==v238)) then v89[v149]=v151;v71=v91[(3071 -1943) -(325 + 800)];break;end end break;end end break;end if ((v236==0) or ((13736 -10614)>=((758 + 4479) -(195 + 76)))) then v237=0 + 0;v238=nil;v236=85 -((1706 -(962 + 717)) + 57);end end else v71=v71 + 1 + 0;end break;end end break;end if ((v145==((5522 -3836) -(995 + 690))) or ((1198 -(408 + 289))==(475 + 2325))) then v148=nil;v149=nil;v145=1 + (1255 -(1057 + 197));end if ((106<=2232) and (v145==0)) then v146=0 -0;v147=nil;v145=1 + 0;end end end elseif ((594==(1421 -((746 -(92 + 170)) + (1573 -1230)))) and (v92>19)) then local v152=0;local v153;local v154;local v155;while true do if (((2014 + 149)>=(17 + 2)) and (v152==(0 + 0 + 0))) then local v189=342 -(19 + 323);while true do if ((v189==0) or ((6439 -(947 + 649))==(2222 -548))) then v153=0 + 0;v154=nil;v189=1 + 0;end if (((5228 -(744 + 1011))>(1581 -1143)) and (v189==(1 + 0))) then v152=(561 -(11 + 549)) + 0;break;end end end if ((v152==(4 -3)) or ((4545 -1787)>((1509 -(23 + 1364)) + 3045))) then v155=nil;while true do if ((v153==0) or ((12053 -7392)==1192)) then local v206=0 + 0 + 0;while true do if ((v206==0) or ((7442 -3978)<(3914 -(202 + 761)))) then local v245=1107 -(473 + 634);while true do if ((v245==((1370 -(420 + 179)) -((1270 -(494 + 313)) + 307))) or (4324<(4290 -(213 + 442)))) then v206=1 + 0;break;end if (((6641 -4762)<(2497 + 601)) and ((0 + 0)==v245)) then v154=v91[(2916 -(1281 + 235)) -(984 + 414)];v155={};v245=1 + 0;end end end if (((5239 -(215 + 1676))<=(5961 -(335 + 701))) and (v206==(2 -1))) then v153=1;break;end end end if ((v153==(469 -(445 + 23))) or ((1589 + 695)>=(22600 -(35390 -17347)))) then for v217=1 -0, #v88 do local v218=0;local v219;local v220;while true do if ((((4504 -(457 + 11)) -1694)>(399 + (1537 -(130 + 230)))) and (v218==(1748 -(1360 + 387)))) then while true do if ((3342>2615) and (v219==(0 -0))) then v220=v88[v217];for v259=0 -0, #v220 do local v260=1168 -(813 + 355);local v261;local v262;local v263;while true do if (((22 + 684)>56) and (v260==(1 + 0))) then v263=v261[1091 -(1072 + 17)];if (((v262==v89) and (v263>=v154)) or ((3216 -(566 + 401))<=(3394 -2314))) then local v275=0 + 0;while true do if ((v275==(604 -(257 + 347))) or ((784 + 24)==(1405 -1029))) then v155[v263]=v262[v263];v261[1 + 0]=v155;break;end end end break;end if ((2192>=1796) and ((677 -(14 + 663))==v260)) then v261=v220[v259];v262=v261[1 -0];v260=215 -(109 + 105);end end end break;end end break;end if ((v218==(0 -0)) or ((3273 -(663 + 422))<(2464 -(1520 + (935 -652))))) then v219=0 -(696 -(590 + 106));v220=nil;v218=1 -0;end end end break;end end break;end end elseif (v89[v91[1 + 1]] or ((121 + 4845)<=(573 + 1517 + 1101))) then v71=v71 + 1;else v71=v91[3];end elseif ((v92<=(1585 -(332 + 1231))) or (3252>=(6342 -1912))) then if ((v92==21) or ((217 + 181 + 187)==(3368 + 962))) then v89[v91[605 -(19 + 584)]]();else v89[v91[5 -3]][v89[v91[11 -8]]]=v89[v91[1555 -(1137 + 414)]];end elseif (((7964 -4401)>(4922 -(582 + 1330))) and (v92<=(22 + 1))) then v71=v91[2 + 1];elseif (((1507 + 2548)>(1781 + 528)) and (v92>((142 -62) -56))) then local v179=0 -0;local v180;local v181;while true do if ((v179==(1908 -(1291 + 2 + 291 + 323))) or (4185<=(212 + 1897))) then while true do if ((v180==0) or ((2254 + 194 + 2076)<3638)) then v181=v91[(2113 -(203 + 49)) -(605 + 1254)];v89[v181]=v89[v181]();break;end end break;end if (((2426 -(348 + 256))<=(6540 -((2010 -641) + 206))) and (v179==(1559 -(566 + 993)))) then v180=0 + (0 -0);v181=nil;v179=1 -0;end end else local v182=0 + (1830 -(1354 + 476));local v183;local v184;local v185;local v186;while true do if (((6003 -(1123 + 860))>(1632 + 250)) and (v182==(0 + 0))) then local v195=0 -0;while true do if ((v195==(0 -0)) or ((7819 -4894)==4911)) then v183=v91[2];v184,v185=v86(v89[v183](v12(v89,v183 + 1 + 0,v91[3 + 0])));v195=162 -(28 + (341 -208));end if ((v195==(1 + 0 + 0)) or ((2295 + 2605)<=1848)) then v182=1 + (185 -(144 + 41));break;end end end if ((v182==((4 + 1) -3)) or ((39 + 880 + 448)>=(2330 -609))) then for v207=v183,v72 do local v208=0 -(0 + 0);local v209;while true do if ((0==v208) or ((2016 -619)==(794 -(186 + 25 + 54)))) then v209=1877 -(1199 + 678);while true do if ((v209==(0 -0)) or ((88 -58)>(1446 + 2728))) then v186=v186 + (2 -1);v89[v207]=v184[v186];break;end end break;end end end break;end if ((v182==(2 -1)) or (3346<=(9572 -7405))) then v72=(v185 + v183) -(1 + 0);v186=0 -0;v182=2 + 0;end end end elseif ((v92<=(753 -(558 + 166))) or ((20503 -15849)<=(2635 -807))) then if ((3027<(5399 -(833 + 2))) and (v92<=(8 + 19))) then if ((v92==26) or ((3916 -1605)>=(10859 -6593))) then local v157=672 -(290 + 382);local v158;local v159;while true do if ((494<=3269) and (v157==(0 -0))) then v158=0 + 0;v159=nil;v157=884 -(106 + 777);end if (((1273 -(330 + 171))>(88 + 67)) and ((1384 -(1260 + (198 -(23 + 52))))==v157)) then while true do if (((4935 -1716)<=(4586 -(862 + 486))) and (v158==(1578 -(93 + 1485)))) then v159=v91[822 -(132 + 688)];v89[v159]=v89[v159](v12(v89,v159 + (1 -0),v72));break;end end break;end end else do return;end end elseif ((4326==(14255 -9929)) and (v92>(114 -86))) then v89[v91[4 -2]]=v35[v91[2 + 1]];elseif ((v89[v91[8 -6]]==v89[v91[(12 -8) + 0]]) or ((5734 -3817)>=2293)) then v71=v71 + 1 + 0;else v71=v91[3];end elseif (((133 + 1290)<2156) and (v92<=31)) then if ((v92==(71 -41)) or (1349>=(10736 -7640))) then local v161=0 + 0;local v162;while true do if (((1175 -(170 + 87))<(878 + 1850)) and (v161==(1869 -(74 + 57 + 1738)))) then v162=v91[2];v89[v162]=v89[v162](v12(v89,v162 + 1 + 0,v91[5 -(2 + 0)]));break;end end else local v163=453 -(257 + 196);local v164;local v165;local v166;local v167;while true do if (((3878 -(883 + 83))<=(3236 -(36 + 189))) and (v163==(1464 -(480 + 984)))) then v164=0 + 0;v165=nil;v163=(1103 -(414 + 688)) + 0;end if (((1413 + 1364 + 919)<=(11133 -7345)) and (v163==(1565 -(1506 + 58)))) then v166=nil;v167=nil;v163=1 + (3 -2);end if (((1932 + 943)<=(12624 -8786)) and (v163==(147 -((319 -245) + 71)))) then while true do if (((2438 + 420 + 88)>(912 -(347 + 318))) and (v164==(0 -0))) then local v211=0 -(0 -0);while true do if ((1882>(2915 -(978 + 119))) and (v211==(1 + 0))) then v164=1845 -(1474 + 370);break;end if ((v211==((0 -0) + 0)) or ((1753 + 879)>(845 + 2181))) then v165=v84[v91[10 -7]];v166=nil;v211=1;end end end if (((3206 -(107 + 1552))>(1327 -(115 + 31))) and (v164==2)) then for v221=1503 -(479 + (1685 -(125 + 537))),v91[409 -(52 + 353)] do local v222=0 -(0 + 0);local v223;local v224;local v225;while true do if ((v222==1) or ((985 + 1172)==(4508 -(796 + 100)))) then v225=nil;while true do if ((v223==0) or (2047>=(6584 -3244))) then local v256=0 + 0;while true do if (((4733 -(93 + 1829))==(998 + (2372 -(318 + 241)))) and (v256==(1285 -(144 + 1140)))) then v223=1436 -((1706 -(613 + 71)) + 413);break;end if (((3107 -1466)==(2810 -(542 + 627))) and ((35 -(20 + 15))==v256)) then v224=0 + 0;v225=nil;v256=1 + 0 + 0;end end end if ((v223==1) or ((2786 -(81 + 210))>(12268 -(7860 -(71 + 215))))) then while true do if (((3717 -(38 + 29 + 23))==3627) and (v224==(0 -0))) then local v265=0 -(0 + 0);while true do if ((v265==(0 + 0)) or (1083>=(7953 -4872))) then local v276=833 -(267 + 566);while true do if (((0 -0)==v276) or (3247<(2076 -1508))) then v71=v71 + 1 + 0;v225=v82[v71];v276=1 + 0;end if (((2 -1)==v276) or (((2054 -(72 + 28)) + 95)>=2524)) then v265=142 -(114 + 27);break;end end end if ((v265==(1 -0)) or ((141 + (1132 -(564 + 118)))>=1037)) then v224=258 -(162 + 95);break;end end end if ((v224==(1 + (1639 -(1465 + 174)))) or (4642<=3449)) then if (((2532 + 354)>2861) and (v225[2 -1]==4)) then v167[v221-1]={v89,v225[2 + 1]};else v167[v221-(1663 -(166 + 1496))]={v35,v225[1098 -(998 + 97)]};end v88[ #v88 + (39 -(36 + 2))]=v167;break;end end break;end end break;end if ((0==v222) or (((2045 + 1935) -(65 + 679))<((1543 + 1275) -(20 + (359 -(15 + 79)))))) then v223=0 -0;v224=nil;v222=1 + 0;end end end v89[v91[1 + 1]]=v28(v165,v166,v36);break;end if ((v164==(654 -(395 + 258))) or ((1287 -(239 + 23))>=(1098 + 1223))) then v167={};v166=v9({},{__index=function(v226,v227)local v240=0 + 0;local v241;local v242;while true do if ((v240==(0 + 0)) or (2876>=2939)) then v241=0 + 0;v242=nil;v240=1;end if ((v240==((1190 -(410 + 779)) -0)) or ((2126 + 1720)<(4991 -(912 + 575 + 333)))) then while true do if ((v241==0) or ((1864 -644)>((3643 -(329 + 86)) -(292 + (2844 -1757))))) then v242=v167[v227];return v242[1][v242[(4 -2) + 0]];end end break;end end end,__newindex=function(v228,v229,v230)local v243=0 + 0;local v244;while true do if ((v243==0) or ((701 -(98 + 46))>((7597 + 755) -4832))) then v244=v167[v229];v244[1 -0][v244[1 + 1]]=v230;break;end end end});v164=2 + 0;end end break;end end end elseif ((v92<=32) or (1545>=(8466 -4975))) then for v171=v91[2 -0],v91[1522 -(639 + 880)] do v89[v171]=nil;end elseif (((3049 + 1785)>=(909 -427)) and (v92>(291 -(177 + 81)))) then v89[v91[1 + 1]][v91[3]]=v89[v91[5 -1]];else v89[v91[2 + 0 + 0]]=v28(v84[v91[3]],nil,v36);end v71=v71 + 1 + 0;break;end end end end v70=3;end end end;end return v28(v27(),{},v16)();end vv8());end